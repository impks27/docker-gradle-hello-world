/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */

 buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'docker'
apply plugin: 'application'

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

mainClassName = 'com.sample.HelloWorld'

jar {
    manifest {
        attributes(
            'Main-Class': mainClassName
        )
    }
}

task buildDocker(type: Docker) {
  baseImage = 'java:8'
  push = project.hasProperty('push')
  tag = 'impks/docker-gradle-hello-world'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-jar', '/app.jar'])
  exposePort(8080)
}

buildDocker.dependsOn(build)
